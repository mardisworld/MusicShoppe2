<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security='http://www.springframework.org/schema/security' xmlns:tx="http://www.springframework.org/schema/tx"

	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
               http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">


	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="org.h2.Driver" />
		<property name="url" value="jdbc:h2:tcp://localhost/~/test" />
		<property name="username" value="sa" />
		<property name="password" value="" />
	</bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop><!--A dialect is a specific sql syntax used for a specific database -->
				<prop key="hibernate.hbm2ddl.auto">update</prop><!--validate, update, create, or createdrop schema -->
				<prop key="hibernate.show_sql">true</prop> <!--when sql is generated, it will show in output of IDE -->
				<prop key="hibernate.format_sql">true</prop> <!--output sql will be formatted -->
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.musicshoppe2</value>
			</list>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="1024000" />
	</bean>

	<security:http auto-config="true">
		<security:intercept-url pattern="/admin/**" access="ROLE_USER" />
		<security:form-login login-page="/login" default-target-url="/admin/" authentication-failure-url="/login?error"
			username-parameter="username" password-parameter="password" />
		<security:logout logout-success-url="/login?logout" />
	</security:http>

	<security:authentication-manager>
		<security:authentication-provider>
			<security:jdbc-user-service data-source-ref="dataSource"
				authorities-by-username-query="SELECT username, authority FROM authorities WHERE username=?"
				users-by-username-query="SELECT username, password, enabled FROM users WHERE username =?" />


		</security:authentication-provider>



	</security:authentication-manager>
</beans>